#!/usr/bin/env python

import os
import os.path as path
import shutil
import sys

script_dir = path.dirname(sys.argv[0])
base_dir = path.dirname(script_dir)
if not base_dir:
  base_dir = '.'

class UsageException(Exception):

  def __init__(self, message):
    Exception.__init__(self, message)

  def usage(self):
    print
    print "USAGE"
    print
    print "    %s target" % path.basename(sys.argv[0])
    print
    print "WHERE"
    print
    print "  target          name of target directory in which to install"
    print

def install(target_dir):
  manifest = path.join(base_dir, "etc", "manifest")
  print "installing into", target_dir
  if path.exists(target_dir):
    if not path.isdir(target_dir):
      raise UsageException("install target not a directory: %s" % target_dir)
  else:
    print "creating", target_dir
    os.mkdir(target_dir)
  for line in open(manifest).readlines():
    fname = line.strip()
    if not fname or fname.startswith('#'):
      continue
    source = path.join(base_dir, "src", fname)
    target = path.join(target_dir, "." + fname)
    if path.exists(target):
      oldtarget = target + ".old"
      if path.exists(oldtarget):
        print "removing %s" % oldtarget
        if path.isdir(oldtarget):
          shutil.rmtree(oldtarget)
        else:
          os.remove(oldtarget)
      print "renaming %s to %s" % (target, oldtarget)
      shutil.move(target, oldtarget)
    print "installing", source, "->", target
    if path.isdir(source):
      shutil.copytree(source, target)
    else:
      shutil.copy(source, target)

if __name__ == '__main__':
  args = sys.argv[1:]
  try:
    if len(args) == 0:
      raise UsageException("target directory must be specified")
    if len(args) > 1:
      raise UsageException("too many arguments")
    install(args[0])
  except Exception, e:
    print >> sys.stderr, e
    sys.exit(1)
